     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ;Se dau cuvintele A si B. Se cere dublucuvantul C:
    14                                      ;bitii 0-5 ai lui C coincid cu bitii 3-8 ai lui A
    15                                      ;bitii 6-8 ai lui C coincid cu bitii 2-4 ai lui B
    16                                      ;bitii 9-15 ai lui C reprezinta bitii 6-12 ai lui A
    17                                      ;bitii 16-31 ai lui C sunt 0
    18                                      ;a dw 0111011101010111b
    19                                      ;b dw 1001101110111110b
    20                                      ;c dd 0
    21                                      
    22                                      
    23                                      ;Se dau cuvintele A, B si C. Sa se obtina octetul D ca suma a numerelor reprezentate de:
    24                                      ;biţii de pe poziţiile 0-4 ai lui A
    25                                      ;biţii de pe poziţiile 5-9 ai lui B
    26                                      ;Octetul E este numarul reprezentat de bitii 10-14 ai lui C. Sa se obtina octetul F ca rezultatul scaderii D-E.
    27 00000000 5777                        a dw 0111011101010111b
    28 00000002 BE9B                        b dw 1001101110111110b
    29 00000004 579B                        c dw 1001101101010111b
    30 00000006 00                          d db 0
    31 00000007 00                          e db 0
    32 00000008 00                          f db 0
    33                                  
    34                                  ; our code starts here
    35                                  segment code use32 class=code
    36                                      start:
    37                                          ;Se dau cuvintele A si B. Se cere dublucuvantul C:
    38                                          ;bitii 0-5 ai lui C coincid cu bitii 3-8 ai lui A
    39                                          ;bitii 6-8 ai lui C coincid cu bitii 2-4 ai lui B
    40                                          ;bitii 9-15 ai lui C reprezinta bitii 6-12 ai lui A
    41                                          ;bitii 16-31 ai lui C sunt 0
    42                                          ;mov ebx,0
    43                                          ;mov ax,[a]; ax = a
    44                                          ;cwde; eax = a
    45                                          ;and eax,0000000111111000b; izolam bitii 3-8 a lui a
    46                                          ;mov cl,3
    47                                          ;ror eax,cl; roteste 3 pozitii spre dreapta
    48                                          ;or ebx,eax; pune in ebx rezultatul
    49                                          
    50                                          ;mov ax,[b]; ax = b
    51                                          ;cwde; eax = b
    52                                          ;and eax,0000000000011100b; izolam bitii 2-4 a lui b
    53                                          ;mov cl,4
    54                                          ;rol eax,cl; roteste 4 pozitii spre stanga
    55                                          ;or ebx,eax; pune in ebx rezultatul
    56                                          
    57                                          ;mov ax,[a]; ax = a
    58                                          ;cwde; eax = a
    59                                          ;and eax,0001111111000000b; izolam bitii 6-12 a lui a
    60                                          ;mov cl,3
    61                                          ;rol eax,cl; roteste 3 pozitii spre stanga
    62                                          ;or ebx,eax; pune in ebx rezultatul
    63                                          
    64                                          
    65                                          ;Se dau cuvintele A, B si C. Sa se obtina octetul D ca suma a numerelor reprezentate de:
    66                                          ;biţii de pe poziţiile 0-4 ai lui A
    67                                          ;biţii de pe poziţiile 5-9 ai lui B
    68                                          ;Octetul E este numarul reprezentat de bitii 10-14 ai lui C. Sa se obtina octetul F ca rezultatul scaderii D-E.
    69 00000000 66BB0000                        mov bx,0
    70 00000004 66A1[00000000]                  mov ax,[a]
    71 0000000A 6683E01F                        and ax,0000000000011111b; izolam bitii 0-4 a lui a
    72 0000000E 6609C3                          or bx,ax; pune in bx rezultatul
    73                                          
    74 00000011 66B90000                        mov cx,0
    75 00000015 66A1[02000000]                  mov ax,[b]
    76 0000001B 6625E003                        and ax,0000001111100000b; izolam bitii 5-9 a lui b
    77 0000001F B105                            mov cl,5
    78 00000021 66D3C8                          ror ax,cl; roteste 5 pozitii spre dreapta
    79 00000024 6609C1                          or cx,ax; pune in cx rezultatul
    80                                          
    81 00000027 6601CB                          add bx,cx; bx = sum(bitii 0-4 A + bitii 5-9 B)
    82 0000002A A0[06000000]                    mov al,[d]; al = d
    83 0000002F 6698                            cbw; ax = d
    84 00000031 6689D8                          mov ax,bx; ax = bx
    85 00000034 6689C2                          mov dx,ax; dx = ax
    86                                          
    87 00000037 66BB0000                        mov bx,0
    88 0000003B 66A1[04000000]                  mov ax,[c]
    89 00000041 6625007C                        and ax,0111110000000000b; izolam bitii 5-9 a lui c
    90 00000045 B10A                            mov cl,10
    91 00000047 66D3C8                          ror ax,cl; roteste 10 pozitii spre dreapta
    92 0000004A 6609C3                          or bx,ax; pune in bx rezultatul
    93                                          
    94 0000004D 6629DA                          sub dx,bx
    95 00000050 A0[08000000]                    mov al,[f]
    96 00000055 6698                            cbw
    97 00000057 6689D0                          mov ax,dx
    98                                      
    99                                          ; exit(0)
   100 0000005A 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   101 0000005C FF15[00000000]                  call    [exit]       ; call exit to terminate the program
