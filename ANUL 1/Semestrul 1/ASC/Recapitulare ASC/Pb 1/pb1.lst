     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fscanf,fclose,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fscanf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 696E7075742E747874-         nume_fisier db 'input.txt',0
    17 00000009 00                 
    18 0000000A 7200                        acces_mode db 'r',0
    19 0000000C FFFFFFFF                    descriptor dd -1
    20 00000010 FFFFFFFF                    cif dd -1
    21 00000014 256300                      format db '%c',0
    22 00000017 257300                      format_afisare db '%s',0
    23 0000001A FF<rept>                    destinatie times 100 db -1
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 BE[1A000000]                    mov esi,destinatie
    29                                          ;fopen(filename,acces_mode)
    30 00000005 68[0A000000]                    push dword acces_mode
    31 0000000A 68[00000000]                    push dword nume_fisier
    32 0000000F FF15[00000000]                  call [fopen]
    33                                          
    34                                          ;vedem daca s-a deschis
    35 00000015 83F800                          cmp eax,0
    36 00000018 7457                            je out_program
    37 0000001A A3[0C000000]                    mov dword[descriptor],eax
    38                                          
    39                                          repeta:
    40                                              ;fscanf(descriptor,format,variabila)
    41 0000001F 68[10000000]                        push dword cif
    42 00000024 68[14000000]                        push dword format
    43 00000029 FF35[0C000000]                      push dword [descriptor]
    44 0000002F FF15[00000000]                      call [fscanf]
    45 00000035 83C40C                              add esp,4*3
    46                                              
    47 00000038 83F8FF                              cmp eax,-1
    48 0000003B 740C                                je out_citire
    49                                              
    50 0000003D 83C601                              add esi,1
    51 00000040 A0[10000000]                        mov al,byte[cif]
    52 00000045 8806                                mov byte[esi],al
    53                                              
    54 00000047 EBD6                                jmp repeta
    55                                          out_citire:
    56                                          
    57                                          ;fclose(descriptor)
    58 00000049 FF35[0C000000]                  push dword [descriptor]
    59 0000004F FF15[00000000]                  call [fclose]
    60 00000055 83C404                          add esp,4*1
    61                                          
    62 00000058 83C601                          add esi,1
    63 0000005B C60600                          mov byte[esi],0
    64                                          
    65                                          ;printf(format,variabile)
    66 0000005E 68[1A000000]                    push dword destinatie
    67 00000063 68[17000000]                    push dword format_afisare
    68 00000068 FF15[00000000]                  call [printf]
    69 0000006E 83C408                          add esp,4*2
    70                                          
    71                                          out_program:
    72                                          ; exit(0)
    73 00000071 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    74 00000073 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
