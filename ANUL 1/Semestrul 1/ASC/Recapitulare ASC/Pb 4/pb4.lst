     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,fopen,fclose,fscanf,printf               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  import fopen msvcrt.dll
    11                                  import fscanf msvcrt.dll
    12                                  import fclose msvcrt.dll
    13                                  import printf msvcrt.dll
    14                                  
    15                                  ; our data is declared here (the variables needed by our program)
    16                                  segment data use32 class=data
    17 00000000 696E7075742E747874-         nume_fisier db 'input.txt',0
    17 00000009 00                 
    18 0000000A 7200                        acces_mode db 'r',0
    19 0000000C FFFFFFFF                    descriptor dd -1
    20 00000010 256400                      format db '%d',0
    21 00000013 20                          spatiu db ' '
    22 00000014 FFFFFFFF                    cif dd -1
    23 00000018 00000000                    contor dd 0
    24                                  
    25                                  ; our code starts here
    26                                  segment code use32 class=code
    27                                      start:
    28 00000000 68[0A000000]                    push dword acces_mode
    29 00000005 68[00000000]                    push dword nume_fisier
    30 0000000A FF15[00000000]                  call [fopen]
    31 00000010 83C408                          add esp, 4 * 2
    32                                          
    33 00000013 83F800                          cmp eax,0
    34 00000016 745E                            je out_program
    35 00000018 A3[0C000000]                    mov dword[descriptor],eax
    36                                          
    37                                          repeta:
    38 0000001D 68[14000000]                        push dword cif
    39 00000022 68[10000000]                        push dword format
    40 00000027 FF35[0C000000]                      push dword [descriptor]
    41 0000002D FF15[00000000]                      call [fscanf]
    42 00000033 83C40C                              add esp,4*3
    43                                              
    44 00000036 83F8FF                              cmp eax,-1
    45 00000039 7419                                je out_citire
    46                                              
    47 0000003B BB[18000000]                        mov ebx,contor
    48 00000040 8B0D[14000000]                      mov ecx,dword[cif]
    49 00000046 83F932                              cmp ecx,'2'
    50 00000049 75D2                                jne repeta
    51 0000004B 83C301                              add ebx,1
    52 0000004E 891D[18000000]                      mov dword[contor],ebx
    53                                          out_citire:
    54                                          
    55 00000054 FF35[0C000000]                  push dword [descriptor]
    56 0000005A FF15[00000000]                  call [fclose]
    57 00000060 83C404                          add esp,4*1
    58                                          
    59 00000063 68[18000000]                    push dword contor
    60 00000068 68[10000000]                    push dword format
    61 0000006D FF15[00000000]                  call [printf]
    62 00000073 83C408                          add esp,4*2
    63                                          
    64                                          out_program:
    65                                          ; exit(0)
    66 00000076 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    67 00000078 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
